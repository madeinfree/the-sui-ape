import { useMemo, useState } from 'react'
import dynamic from 'next/dynamic'
import Head from 'next/head'
import Container from 'react-bootstrap/Container'
import Nav from 'react-bootstrap/Nav'
import Navbar from 'react-bootstrap/Navbar'
import Alert from 'react-bootstrap/Alert'
import Button from 'react-bootstrap/Button'

import { WalletProvider, useWallet } from '@mysten/wallet-adapter-react'
import { WalletStandardAdapterProvider } from '@mysten/wallet-adapter-all-wallets'

const MintDynamic = dynamic(() => import('../components/ConnectButton'), {
  ssr: false,
})

export default function Home() {
  const walletAdapters = useMemo(
    () => [new WalletStandardAdapterProvider()],
    []
  )

  return (
    <>
      <Head>
        <title>Sui APE mint</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="https://sui.io/favicon.png" />
      </Head>
      <WalletProvider adapters={walletAdapters}>
        <Navbar bg="light" expand="lg">
          <Container>
            <Navbar.Brand href="/">The Sui APE</Navbar.Brand>
            <Navbar.Toggle aria-controls="basic-navbar-nav" />
            <Navbar.Collapse id="basic-navbar-nav">
              <Nav className="me-auto">
                <Nav.Link href="/">Mint</Nav.Link>
              </Nav>
            </Navbar.Collapse>
            <Navbar.Collapse className="justify-content-end">
              <MintDynamic />
            </Navbar.Collapse>
          </Container>
        </Navbar>
        <Main />
      </WalletProvider>
    </>
  )
}

function getRandom(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min
}

function Main() {
  const APE_PACKAGE = '0x0414719f65bc22e400ad4f73fe63267481773b50'
  const APE_REGISTER = '0xa1a4d54c309adca3eab4c5f3dbb27b9e4011ed33'
  const APE_ISSUE_CAP = '0x141e63d70f89bf361aeca3562a893664fd12c395'
  const GAS_BUDGET = 10000

  const { connected, signAndExecuteTransaction } = useWallet()
  const [err, setErr] = useState('')
  const [success, setSuccess] = useState(false)
  const [APE, setAPE] = useState()
  const [isPending, setIsPending] = useState(false)

  const APEs = [
    {
      id: '#3954',
      url: 'https://img.seadn.io/files/a869b6f365fa14f6b039e6ea83415427.png?fit=max&w=1000',
    },
    {
      id: '#2974',
      url: 'https://img.seadn.io/files/ea93d1afdcdc26942fe8f3215fadfd60.png?fit=max&w=1000',
    },
    {
      id: '#7404',
      url: 'https://img.seadn.io/files/47ae9300181f827bae236bc00768dbbe.png?fit=max&w=1000',
    },
  ]

  const handleMintAPE = () => {
    const luckyNumber = getRandom(0, 2)
    const APE = APEs[luckyNumber]
    setAPE(luckyNumber)
    setIsPending(true)
    signAndExecuteTransaction({
      kind: 'moveCall',
      data: {
        packageObjectId: APE_PACKAGE,
        module: 'sui_ape',
        function: 'mint',
        typeArguments: [],
        arguments: [APE_REGISTER, APE_ISSUE_CAP, APE.url, `The APE ${APE.id}`],
        gasBudget: GAS_BUDGET,
      },
    })
      .then((resp) => {
        if (resp.effects.status.status == 'success') {
          setSuccess(true)
        } else {
          setErr(resp.effects.status.error)
        }
      })
      .catch((error) => {
        setErr(error.message)
      })
      .finally(() => {
        setIsPending(false)
      })
  }

  const handleClearAll = () => {
    setSuccess(false)
    setAPE()
  }

  return (
    <>
      {connected ? (
        <Container>
          <h1
            style={{
              marginTop: 10,
              textAlign: 'center',
            }}
          >
            <Alert variant="primary">
              點擊「進行鑄造」按鈕隨機獲得一個 Sui APE
            </Alert>
          </h1>
          {success ? (
            <div className="d-grid gap-2">
              <Alert variant="secondary">
                <Alert.Heading>鑄造成功了嗎？</Alert.Heading>
                <p>恭喜你鑄造了 {APEs[APE].id}</p>
                <hr />
                <div className="d-flex justify-content-end">
                  <Button variant="outline-primary" onClick={handleClearAll}>
                    再次體驗
                  </Button>
                </div>
              </Alert>
              <img src={APEs[APE].url} />
            </div>
          ) : isPending ? (
            '鑄造中...'
          ) : (
            <div className="d-grid gap-2">
              <Button variant="dark" onClick={handleMintAPE}>
                進行鑄造
              </Button>
            </div>
          )}
        </Container>
      ) : (
        <>
          <Container style={{ marginTop: 10 }}>
            <Alert variant="info">
              <Alert.Heading>請先點擊右上角連接 Sui 錢包</Alert.Heading>
              <div>連接錢包後，立即體驗鑄造 Sui APE</div>
            </Alert>
          </Container>
        </>
      )}
    </>
  )
}
